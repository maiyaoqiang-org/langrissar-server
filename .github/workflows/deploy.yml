name: Deploy to ACR

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Aliyun ACR
        uses: docker/login-action@v2
        with:
          registry: crpi-98ymlx0yqe646pye.cn-guangzhou.personal.cr.aliyuncs.com
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and Push
        env:
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          NODE_ENV: production
        run: |
          echo "DB_HOST=$DB_HOST" >> .env.production
          echo "DB_PORT=$DB_PORT" >> .env.production
          echo "DB_USERNAME=$DB_USERNAME" >> .env.production
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env.production
          echo "DB_DATABASE=$DB_DATABASE" >> .env.production
          echo "NODE_ENV=$NODE_ENV" >> .env.production
          docker buildx build --push --platform linux/amd64 --tag crpi-98ymlx0yqe646pye.cn-guangzhou.personal.cr.aliyuncs.com/myq-space/langrissar-server:latest .

      - name: SSH Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            # Create network if not exists
            docker network create langrissar-network || true
            
            # Start MySQL container if not running
            docker run -d \
              --name mysql-db \
              --network langrissar-network \
              -e MYSQL_ROOT_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e MYSQL_DATABASE=${{ secrets.DB_DATABASE }} \
              -e MYSQL_USER=${{ secrets.DB_USERNAME }} \
              -e MYSQL_PASSWORD=${{ secrets.DB_PASSWORD }} \
              mysql:8.0 || true
            
            # Wait for MySQL to be ready
            sleep 30
            
            # Deploy application
            docker pull crpi-98ymlx0yqe646pye.cn-guangzhou.personal.cr.aliyuncs.com/myq-space/langrissar-server:latest
            docker stop langrissar-server || true
            docker rm langrissar-server || true
            docker run -d -p 3000:3000 \
              --network langrissar-network \
              -e DB_HOST=mysql-db \
              -e DB_PORT=3306 \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              -e DB_DATABASE=${{ secrets.DB_DATABASE }} \
              -e NODE_ENV=production \
              --name langrissar-server \
              crpi-98ymlx0yqe646pye.cn-guangzhou.personal.cr.aliyuncs.com/myq-space/langrissar-server:latest